syntax = "proto3";

package side.btcbridge;

import "gogoproto/gogo.proto";
import "side/btcbridge/params.proto";
import "side/btcbridge/btcbridge.proto";

option go_package = "github.com/sideprotocol/side/x/btcbridge/types";

// Msg defines the Msg service.
service Msg {
  // SubmitBlockHeaders submits bitcoin block headers to the side chain.
  rpc SubmitBlockHeaders (MsgSubmitBlockHeaders) returns (MsgSubmitBlockHeadersResponse);
  // UpdateNonBtcRelayers updates the authorized non-btc asset relayers.
  rpc UpdateNonBtcRelayers (MsgUpdateNonBtcRelayers) returns (MsgUpdateNonBtcRelayersResponse);
  // SubmitDepositTransaction submits bitcoin transaction to the side chain.
  rpc SubmitDepositTransaction (MsgSubmitDepositTransaction) returns (MsgSubmitDepositTransactionResponse);
  // SubmitWithdrawalTransaction submits bitcoin transaction to the side chain.
  rpc SubmitWithdrawTransaction (MsgSubmitWithdrawTransaction) returns (MsgSubmitWithdrawTransactionResponse);
  // WithdrawToBitcoin withdraws the asset to bitcoin.
  rpc WithdrawToBitcoin (MsgWithdrawToBitcoin) returns (MsgWithdrawToBitcoinResponse);
  // SubmitWithdrawSignatures submits the signatures of the withdraw transaction.
  rpc SubmitWithdrawSignatures (MsgSubmitWithdrawSignatures) returns (MsgSubmitWithdrawSignaturesResponse);
  // InitiateDKG initiates the DKG request.
  rpc InitiateDKG (MsgInitiateDKG) returns (MsgInitiateDKGResponse);
  // CompleteDKG completes the given DKG request.
  rpc CompleteDKG (MsgCompleteDKG) returns (MsgCompleteDKGResponse);
  // UpdateParams defines a governance operation for updating the x/btcbridge module
  // parameters. The authority defaults to the x/gov module account.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgSubmitBlockHeaders defines the Msg/SubmitBlockHeaders request type.
message MsgSubmitBlockHeaders {
  string sender = 1;
  repeated BlockHeader block_headers = 2;
}

// MsgSubmitBlockHeadersResponse defines the Msg/SubmitBlockHeaders response type.
message MsgSubmitBlockHeadersResponse {
}

// MsgUpdateNonBtcRelayers defines the Msg/UpdateNonBtcRelayers request type.
message MsgUpdateNonBtcRelayers {
  string sender = 1;
  repeated string relayers = 2;
}

// MsgUpdateNonBtcRelayersResponse defines the Msg/UpdateNonBtcRelayers response type.
message MsgUpdateNonBtcRelayersResponse {
}

// MsgSubmitDepositTransaction defines the Msg/SubmitDepositTransaction request type.
message MsgSubmitDepositTransaction {
  // this is the relayer address who submits the bitcoin transaction to the side chain
  string sender = 1;
  string blockhash = 2;
  // the tx bytes in base64 format
  // used for parsing the sender of the transaction
  string prev_tx_bytes = 3;
  // the tx bytes in base64 format
  string tx_bytes = 4;
  repeated string proof = 5;
}

// MsgSubmitDepositTransactionResponse defines the Msg/SubmitDepositTransaction response type.
message MsgSubmitDepositTransactionResponse {
}

// MsgSubmitWithdrawTransaction defines the Msg/SubmitWithdrawTransaction request type.
message MsgSubmitWithdrawTransaction {
  // this is the relayer address who submits the bitcoin transaction to the side chain
  string sender = 1;
  string blockhash = 2;
  // the tx bytes in base64 format
  string tx_bytes = 3;
  repeated string proof = 4;
}

// MsgSubmitWithdrawTransactionResponse defines the Msg/SubmitWithdrawTransaction response type.
message MsgSubmitWithdrawTransactionResponse {
}

// MsgWithdrawToBitcoin defines the Msg/WithdrawToBitcoin request type.
message MsgWithdrawToBitcoin {
  string sender = 1;
  // withdraw amount in satoshi, etc: 100000000sat = 1btc
  string amount = 2;
  // fee rate in sats/vB
  string fee_rate = 3;
}

// MsgWithdrawToBitcoinResponse defines the Msg/WithdrawToBitcoin response type.
message MsgWithdrawToBitcoinResponse {
}

// MsgSubmitWithdrawSignatures defines the Msg/SubmitWithdrawSignatures request type.
message MsgSubmitWithdrawSignatures {
  string sender = 1;
  string txid = 2;
  string psbt = 3;
}

// MsgSubmitWithdrawSignaturesResponse defines the Msg/SubmitWithdrawSignatures response type.
message MsgSubmitWithdrawSignaturesResponse {
}

// MsgInitiateDKG is the Msg/InitiateDKG request type.
message MsgInitiateDKG {
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1;
  // expected participant set
  repeated DKGParticipant participants = 2;
  // threshold required to perform DKG
  uint32 threshold = 3;
  // asset types of vaults to be generated
  repeated AssetType vault_types = 4;
}

// MsgInitiateDKGResponse defines the Msg/InitiateDKG response type.
message MsgInitiateDKGResponse {}

// MsgCompleteDKG is the Msg/CompleteDKG request type.
message MsgCompleteDKG {
  // the sender
  string sender = 1;
  // DKG request id
  uint64 id = 2;
  // new vaults generated by DKG
  repeated string vaults = 3;
  // consensus address of the corresponding validator
  string consensus_address = 4;
  // hex encoded validator signature
  string signature = 5;
}

// MsgCompleteDKGResponse defines the Msg/CompleteDKG response type.
message MsgCompleteDKGResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1;

  // params defines the x/btcbridge parameters to be updated.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the Msg/UpdateParams response type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}
