syntax = "proto3";
package side.auction;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "side/auction/auction.proto";
import "side/auction/params.proto";

option go_package = "github.com/sideprotocol/side/x/auction/types";

// Query defines the gRPC querier service.
service Query {
    // Params queries the parameters of the module.
    rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
      option (google.api.http).get = "/side/auction/params";
    }
    // Auction queries the specified auction by id.
    rpc Auction(QueryAuctionRequest) returns (QueryAuctionResponse) {
        option (google.api.http).get = "/side/auction/auction/{id}";
    }
    // Auctions queries the auctions by the given status.
    rpc Auctions(QueryAuctionsRequest) returns (QueryAuctionsResponse) {
        option (google.api.http).get = "/side/auction/auctions";
    }
    // Bid queries the specified bid by id.
    rpc Bid(QueryBidRequest) returns (QueryBidResponse) {
        option (google.api.http).get = "/side/auction/bid/{id}";
    }
    // Bids queries the bids by the given status.
    rpc Bids(QueryBidsRequest) returns (QueryBidsResponse) {
        option (google.api.http).get = "/side/auction/bids";
    }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {
}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
    Params params = 1 [(gogoproto.nullable) = false];
}

// QueryAuctionRequest is request type for the Query/Auction RPC method.
message QueryAuctionRequest {
    uint64 id = 1;
}

// QueryAuctionResponse is response type for the Query/Auction RPC method.
message QueryAuctionResponse {
    Auction auction = 1;
}

// QueryAuctionsRequest is request type for the Query/Auctions RPC method.
message QueryAuctionsRequest {
    AuctionStatus status = 1;
    cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryAuctionsResponse is response type for the Query/Auctions RPC method.
message QueryAuctionsResponse {
    repeated Auction auctions = 1;
    cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryBidRequest is request type for the Query/Bid RPC method.
message QueryBidRequest {
    uint64 id = 1;
}

// QueryBidResponse is response type for the Query/Bid RPC method.
message QueryBidResponse {
    Bid bid = 1;
}

// QueryBidsRequest is request type for the Query/Bids RPC method.
message QueryBidsRequest {
    BidStatus status = 1;
    cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryBidsResponse is response type for the Query/Bids RPC method.
message QueryBidsResponse {
    repeated Bid bids = 1;
    cosmos.base.query.v1beta1.PageRequest pagination = 2;
}
