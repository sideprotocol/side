syntax = "proto3";
package side.lending;

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/sideprotocol/side/x/lending/types";

// Msg defines the Msg service.
service Msg {
    option (cosmos.msg.v1.service) = true;
    rpc AddLiquidity(MsgAddLiquidity) returns (MsgAddLiquidityResponse);
    rpc RemoveLiquidity(MsgRemoveLiquidity) returns (MsgRemoveLiquidityResponse);
    rpc RequestVaultAddress(MsgRequestVaultAddress) returns (MsgRequestVaultAddressResponse);
    rpc SubmitFundingTx(MsgSubmitFundingTx) returns (MsgSubmitFundingTxResponse);
    rpc CreateLoan(MsgCreateLoan) returns (MsgCreateLoanResponse);
    rpc Repay(MsgRepay) returns (MsgRepayResponse);
}

message MsgRepay{
    option (cosmos.msg.v1.signer) = "borrower";

    string borrower = 1;
    Coin amount = 2;
    string adaptor_point = 3;
}

message MsgRepayResponse{}

message MsgCreateLoan {
    option (cosmos.msg.v1.signer) = "borrower";
    string borrower = 1;
    string vault_address = 2; // id
    uint32 period = 3;
    string pool_id = 4;
    Coin borrow_amount = 5;
    string event_id = 6;
    string cets = 7;
    string loan_secret = 8;
}

message MsgCreateLoanResponse{}

message MsgAddLiquidity {
    option (cosmos.msg.v1.signer) = "lender";

    string pool_id = 1;
    string lender = 2;
    Coin amount = 3;
}
message MsgAddLiquidityResponse {
    Coin shares = 1;
}

message MsgRemoveLiquidity {
    option (cosmos.msg.v1.signer) = "lender";

    string lender = 1;
    Coin shares = 2;
}

message MsgRemoveLiquidityResponse {
    Coin amount = 1;
}

message MsgRequestVaultAddress {
    option (cosmos.msg.v1.signer) = "borrower";

    string borrower = 1;
    string borrower_pubkey = 2;
    string hash_of_loan_secret = 3;
    uint64 maturity_time = 4;
    uint64 final_timeout =5;
}

message MsgRequestVaultAddressResponse {
    string vault_address = 1;  
}

message MsgSubmitFundingTx {
    option (cosmos.msg.v1.signer) = "relayer";
    
    string relayer = 1;
    string borrower = 2; // Remove? can be parsed from tx?
    string funding_tx =3;
    string height = 4;
    string poof = 5;
}

message MsgSubmitFundingTxResponse {

}

// message MsgCreateLoan {
//     option (cosmos.msg.v1.signer) = "borrower";

//     string borrower = 1;
//     string funding_tx =2;
//     Coin collateral_amount = 3;
//     Coin borrow_amount = 4;
//     Coin fees = 5;
//     uint32 period = 6;
//     uint32 interest_rate = 7;
//     string vault_address = 8;
//     string event_id = 9;
//     string cet = 10;
// }

// message MsgCreateLoanResposne {}



